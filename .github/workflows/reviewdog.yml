name: reviewdog

on: [pull_request]

jobs:
  eslint:
    name: 'eslint (node: ${{ matrix.node }}, os: ${{ matrix.os }})'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [16]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - uses: reviewdog/action-eslint@v1
        with:
          reporter: 'github-check'
          eslint_flags: '.'
  stylelint:
    name: 'stylelint (node: ${{ matrix.node }}, os: ${{ matrix.os }})'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [16]
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - uses: reviewdog/action-stylelint@v1
        with:
          reporter: 'github-check'
          stylelint_input: 'src/**/*.css'
  prettier:
    name: 'prettier (node: ${{ matrix.node }}, os: ${{ matrix.os }})'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [16]
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - uses: EPMatt/reviewdog-action-prettier@v1
        with:
          reporter: 'github-check'
